[
    {
        "label": "BaseSettings",
        "importPath": "pydantic_settings",
        "description": "pydantic_settings",
        "isExtraImport": true,
        "detail": "pydantic_settings",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "asyncio",
        "description": "asyncio",
        "isExtraImport": true,
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "asyncio",
        "description": "asyncio",
        "isExtraImport": true,
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Awaitable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Coroutine",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "ParamSpec",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AsyncIterator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Bot",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Dispatcher",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Router",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Router",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Router",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Bot",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Dispatcher",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "BaseMiddleware",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Bot",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Dispatcher",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "Bot",
        "importPath": "aiogram",
        "description": "aiogram",
        "isExtraImport": true,
        "detail": "aiogram",
        "documentation": {}
    },
    {
        "label": "ORJSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "starlette.requests",
        "description": "starlette.requests",
        "isExtraImport": true,
        "detail": "starlette.requests",
        "documentation": {}
    },
    {
        "label": "tg_router",
        "importPath": "src.api.tg.router",
        "description": "src.api.tg.router",
        "isExtraImport": true,
        "detail": "src.api.tg.router",
        "documentation": {}
    },
    {
        "label": "tg_router",
        "importPath": "src.api.tg.router",
        "description": "src.api.tg.router",
        "isExtraImport": true,
        "detail": "src.api.tg.router",
        "documentation": {}
    },
    {
        "label": "get_dispatcher",
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "isExtraImport": true,
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "get_tg_bot",
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "isExtraImport": true,
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "bot",
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "isExtraImport": true,
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "get_dispatcher",
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "isExtraImport": true,
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "get_tg_bot",
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "isExtraImport": true,
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "tg_background_tasks",
        "importPath": "src.utils.background_tasks",
        "description": "src.utils.background_tasks",
        "isExtraImport": true,
        "detail": "src.utils.background_tasks",
        "documentation": {}
    },
    {
        "label": "tg_background_tasks",
        "importPath": "src.utils.background_tasks",
        "description": "src.utils.background_tasks",
        "isExtraImport": true,
        "detail": "src.utils.background_tasks",
        "documentation": {}
    },
    {
        "label": "InlineKeyboardMarkup",
        "importPath": "aiogram.types",
        "description": "aiogram.types",
        "isExtraImport": true,
        "detail": "aiogram.types",
        "documentation": {}
    },
    {
        "label": "TelegramObject",
        "importPath": "aiogram.types",
        "description": "aiogram.types",
        "isExtraImport": true,
        "detail": "aiogram.types",
        "documentation": {}
    },
    {
        "label": "BotCommand",
        "importPath": "aiogram.types",
        "description": "aiogram.types",
        "isExtraImport": true,
        "detail": "aiogram.types",
        "documentation": {}
    },
    {
        "label": "InlineKeyboardBuilder",
        "importPath": "aiogram.utils.keyboard",
        "description": "aiogram.utils.keyboard",
        "isExtraImport": true,
        "detail": "aiogram.utils.keyboard",
        "documentation": {}
    },
    {
        "label": "LOGIN_BUTTON",
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "isExtraImport": true,
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "isExtraImport": true,
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "LOGIN_BUTTON",
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "isExtraImport": true,
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "REGISTER_BUTTON",
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "isExtraImport": true,
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "POPULAR_BUTTON",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "FIND_BUTTON",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "AUTH_BUTTON",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "POPULAR_BUTTON",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "FIND_BUTTON",
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "isExtraImport": true,
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "aiohttp",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aiohttp",
        "description": "aiohttp",
        "detail": "aiohttp",
        "documentation": {}
    },
    {
        "label": "ClientResponseError",
        "importPath": "aiohttp.client_exceptions",
        "description": "aiohttp.client_exceptions",
        "isExtraImport": true,
        "detail": "aiohttp.client_exceptions",
        "documentation": {}
    },
    {
        "label": "ClientResponseError",
        "importPath": "aiohttp.client_exceptions",
        "description": "aiohttp.client_exceptions",
        "isExtraImport": true,
        "detail": "aiohttp.client_exceptions",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "FSMContext",
        "importPath": "aiogram.fsm.context",
        "description": "aiogram.fsm.context",
        "isExtraImport": true,
        "detail": "aiogram.fsm.context",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.login",
        "description": "src.buttons.login",
        "isExtraImport": true,
        "detail": "src.buttons.login",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "conf.config",
        "description": "conf.config",
        "isExtraImport": true,
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "isExtraImport": true,
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "isExtraImport": true,
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "isExtraImport": true,
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "isExtraImport": true,
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "isExtraImport": true,
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "importPath": "src.state.login",
        "description": "src.state.login",
        "isExtraImport": true,
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "importPath": "src.state.login",
        "description": "src.state.login",
        "isExtraImport": true,
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "importPath": "src.state.login",
        "description": "src.state.login",
        "isExtraImport": true,
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "importPath": "src.state.login",
        "description": "src.state.login",
        "isExtraImport": true,
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "importPath": "src.state.login",
        "description": "src.state.login",
        "isExtraImport": true,
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "isExtraImport": true,
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "isExtraImport": true,
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "CREATE_BUTTON",
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "isExtraImport": true,
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "MY_RECIPES_BUTTON",
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "isExtraImport": true,
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "Command",
        "importPath": "aiogram.filters",
        "description": "aiogram.filters",
        "isExtraImport": true,
        "detail": "aiogram.filters",
        "documentation": {}
    },
    {
        "label": "Command",
        "importPath": "aiogram.filters.command",
        "description": "aiogram.filters.command",
        "isExtraImport": true,
        "detail": "aiogram.filters.command",
        "documentation": {}
    },
    {
        "label": "Command",
        "importPath": "aiogram.filters.command",
        "description": "aiogram.filters.command",
        "isExtraImport": true,
        "detail": "aiogram.filters.command",
        "documentation": {}
    },
    {
        "label": "Command",
        "importPath": "aiogram.filters.command",
        "description": "aiogram.filters.command",
        "isExtraImport": true,
        "detail": "aiogram.filters.command",
        "documentation": {}
    },
    {
        "label": "main_router",
        "importPath": "src.handlers.main.router",
        "description": "src.handlers.main.router",
        "isExtraImport": true,
        "detail": "src.handlers.main.router",
        "documentation": {}
    },
    {
        "label": "main_router",
        "importPath": "src.handlers.main.router",
        "description": "src.handlers.main.router",
        "isExtraImport": true,
        "detail": "src.handlers.main.router",
        "documentation": {}
    },
    {
        "label": "main_router",
        "importPath": "src.handlers.main.router",
        "description": "src.handlers.main.router",
        "isExtraImport": true,
        "detail": "src.handlers.main.router",
        "documentation": {}
    },
    {
        "label": "main_router",
        "importPath": "src.handlers.main.router",
        "description": "src.handlers.main.router",
        "isExtraImport": true,
        "detail": "src.handlers.main.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "isExtraImport": true,
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "CreateState",
        "importPath": "src.state.create",
        "description": "src.state.create",
        "isExtraImport": true,
        "detail": "src.state.create",
        "documentation": {}
    },
    {
        "label": "CreateState",
        "importPath": "src.state.create",
        "description": "src.state.create",
        "isExtraImport": true,
        "detail": "src.state.create",
        "documentation": {}
    },
    {
        "label": "CreateState",
        "importPath": "src.state.create",
        "description": "src.state.create",
        "isExtraImport": true,
        "detail": "src.state.create",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.like_recipe",
        "description": "src.buttons.like_recipe",
        "isExtraImport": true,
        "detail": "src.buttons.like_recipe",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.like_recipe",
        "description": "src.buttons.like_recipe",
        "isExtraImport": true,
        "detail": "src.buttons.like_recipe",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "importPath": "src.buttons.like_recipe",
        "description": "src.buttons.like_recipe",
        "isExtraImport": true,
        "detail": "src.buttons.like_recipe",
        "documentation": {}
    },
    {
        "label": "SearchState",
        "importPath": "src.state.search",
        "description": "src.state.search",
        "isExtraImport": true,
        "detail": "src.state.search",
        "documentation": {}
    },
    {
        "label": "SearchState",
        "importPath": "src.state.search",
        "description": "src.state.search",
        "isExtraImport": true,
        "detail": "src.state.search",
        "documentation": {}
    },
    {
        "label": "ConnectionPool",
        "importPath": "redis.asyncio",
        "description": "redis.asyncio",
        "isExtraImport": true,
        "detail": "redis.asyncio",
        "documentation": {}
    },
    {
        "label": "Redis",
        "importPath": "redis.asyncio.client",
        "description": "redis.asyncio.client",
        "isExtraImport": true,
        "detail": "redis.asyncio.client",
        "documentation": {}
    },
    {
        "label": "setup_dispatcher",
        "importPath": "src.on_startup.dispatcher",
        "description": "src.on_startup.dispatcher",
        "isExtraImport": true,
        "detail": "src.on_startup.dispatcher",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "ASGIApp",
        "importPath": "starlette.types",
        "description": "starlette.types",
        "isExtraImport": true,
        "detail": "starlette.types",
        "documentation": {}
    },
    {
        "label": "Receive",
        "importPath": "starlette.types",
        "description": "starlette.types",
        "isExtraImport": true,
        "detail": "starlette.types",
        "documentation": {}
    },
    {
        "label": "Scope",
        "importPath": "starlette.types",
        "description": "starlette.types",
        "isExtraImport": true,
        "detail": "starlette.types",
        "documentation": {}
    },
    {
        "label": "Send",
        "importPath": "starlette.types",
        "description": "starlette.types",
        "isExtraImport": true,
        "detail": "starlette.types",
        "documentation": {}
    },
    {
        "label": "correlation_id_ctx",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "LOGGING_CONFIG",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "correlation_id_ctx",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "src.logger",
        "description": "src.logger",
        "isExtraImport": true,
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "RedisStorage",
        "importPath": "aiogram.fsm.storage.redis",
        "description": "aiogram.fsm.storage.redis",
        "isExtraImport": true,
        "detail": "aiogram.fsm.storage.redis",
        "documentation": {}
    },
    {
        "label": "redis",
        "importPath": "src.integrations.redis",
        "description": "src.integrations.redis",
        "isExtraImport": true,
        "detail": "src.integrations.redis",
        "documentation": {}
    },
    {
        "label": "LogMessageMiddleware",
        "importPath": "src.middleware.logger",
        "description": "src.middleware.logger",
        "isExtraImport": true,
        "detail": "src.middleware.logger",
        "documentation": {}
    },
    {
        "label": "LogServerMiddleware",
        "importPath": "src.middleware.logger",
        "description": "src.middleware.logger",
        "isExtraImport": true,
        "detail": "src.middleware.logger",
        "documentation": {}
    },
    {
        "label": "logging.config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging.config",
        "description": "logging.config",
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "StatesGroup",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "State",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "StatesGroup",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "State",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "StatesGroup",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "State",
        "importPath": "aiogram.fsm.state",
        "description": "aiogram.fsm.state",
        "isExtraImport": true,
        "detail": "aiogram.fsm.state",
        "documentation": {}
    },
    {
        "label": "Environment",
        "importPath": "jinja2",
        "description": "jinja2",
        "isExtraImport": true,
        "detail": "jinja2",
        "documentation": {}
    },
    {
        "label": "FileSystemLoader",
        "importPath": "jinja2",
        "description": "jinja2",
        "isExtraImport": true,
        "detail": "jinja2",
        "documentation": {}
    },
    {
        "label": "select_autoescape",
        "importPath": "jinja2",
        "description": "jinja2",
        "isExtraImport": true,
        "detail": "jinja2",
        "documentation": {}
    },
    {
        "label": "LooseHeaders",
        "importPath": "aiohttp.typedefs",
        "description": "aiohttp.typedefs",
        "isExtraImport": true,
        "detail": "aiohttp.typedefs",
        "documentation": {}
    },
    {
        "label": "CIMultiDict",
        "importPath": "multidict",
        "description": "multidict",
        "isExtraImport": true,
        "detail": "multidict",
        "documentation": {}
    },
    {
        "label": "ContextVar",
        "importPath": "contextvars",
        "description": "contextvars",
        "isExtraImport": true,
        "detail": "contextvars",
        "documentation": {}
    },
    {
        "label": "yaml",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yaml",
        "description": "yaml",
        "detail": "yaml",
        "documentation": {}
    },
    {
        "label": "asynccontextmanager",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "setup_logger",
        "importPath": "src.on_startup.logger",
        "description": "src.on_startup.logger",
        "isExtraImport": true,
        "detail": "src.on_startup.logger",
        "documentation": {}
    },
    {
        "label": "setup_logger",
        "importPath": "src.on_startup.logger",
        "description": "src.on_startup.logger",
        "isExtraImport": true,
        "detail": "src.on_startup.logger",
        "documentation": {}
    },
    {
        "label": "setup_webhook",
        "importPath": "src.on_startup.webhook",
        "description": "src.on_startup.webhook",
        "isExtraImport": true,
        "detail": "src.on_startup.webhook",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "conf.config",
        "description": "conf.config",
        "peekOfCode": "class Settings(BaseSettings):\n    TINDER_BACKEND_HOST: str = 'http://web:8000'\n    BOT_TOKEN: str\n    WEBHOOK_URL: str = ''\n    REDIS_HOST: str = 'redis'\n    REDIS_PORT: int = 6379\n    REDIS_PASSWORD: str\n    REDIS_DB: int = 0\n    LOG_LEVEL: str = ''\n    RETRY_COUNT: int = 3",
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "conf.config",
        "description": "conf.config",
        "peekOfCode": "settings = Settings()",
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "tg_router",
        "kind": 5,
        "importPath": "src.api.tg.router",
        "description": "src.api.tg.router",
        "peekOfCode": "tg_router = APIRouter(prefix='')",
        "detail": "src.api.tg.router",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "kind": 2,
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "peekOfCode": "def get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=LOGIN_BUTTON)],\n        [types.KeyboardButton(text=REGISTER_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "LOGIN_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "peekOfCode": "LOGIN_BUTTON = 'Log in'\nREGISTER_BUTTON = 'Register'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=LOGIN_BUTTON)],\n        [types.KeyboardButton(text=REGISTER_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "REGISTER_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.auth",
        "description": "src.buttons.auth",
        "peekOfCode": "REGISTER_BUTTON = 'Register'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=LOGIN_BUTTON)],\n        [types.KeyboardButton(text=REGISTER_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.auth",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "kind": 2,
        "importPath": "src.buttons.like_recipe",
        "description": "src.buttons.like_recipe",
        "peekOfCode": "def get_keyboard() -> InlineKeyboardMarkup:\n    builder = InlineKeyboardBuilder()\n    builder.add(\n        types.InlineKeyboardButton(\n            text=\"👍\",\n            callback_data=\"like\",\n        )\n    )\n    return builder.as_markup()",
        "detail": "src.buttons.like_recipe",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "kind": 2,
        "importPath": "src.buttons.login",
        "description": "src.buttons.login",
        "peekOfCode": "def get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=LOGIN_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.login",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "kind": 2,
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "peekOfCode": "def get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=CREATE_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)],\n        [types.KeyboardButton(text=MY_RECIPES_BUTTON)],\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "CREATE_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "peekOfCode": "CREATE_BUTTON = 'Create recipe'\nMY_RECIPES_BUTTON = 'See all my recipes'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=CREATE_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)],\n        [types.KeyboardButton(text=MY_RECIPES_BUTTON)],\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "MY_RECIPES_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.menu",
        "description": "src.buttons.menu",
        "peekOfCode": "MY_RECIPES_BUTTON = 'See all my recipes'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=CREATE_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)],\n        [types.KeyboardButton(text=MY_RECIPES_BUTTON)],\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.menu",
        "documentation": {}
    },
    {
        "label": "get_keyboard",
        "kind": 2,
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "peekOfCode": "def get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=AUTH_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "AUTH_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "peekOfCode": "AUTH_BUTTON = 'Log in to add your own recipe'\nPOPULAR_BUTTON = 'View the most popular recipes'\nFIND_BUTTON = 'Find recipe by ingredient'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=AUTH_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "POPULAR_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "peekOfCode": "POPULAR_BUTTON = 'View the most popular recipes'\nFIND_BUTTON = 'Find recipe by ingredient'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=AUTH_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "FIND_BUTTON",
        "kind": 5,
        "importPath": "src.buttons.start",
        "description": "src.buttons.start",
        "peekOfCode": "FIND_BUTTON = 'Find recipe by ingredient'\ndef get_keyboard() -> types.ReplyKeyboardMarkup:\n    kb = [\n        [types.KeyboardButton(text=AUTH_BUTTON)],\n        [types.KeyboardButton(text=POPULAR_BUTTON)],\n        [types.KeyboardButton(text=FIND_BUTTON)]\n    ]\n    return types.ReplyKeyboardMarkup(keyboard=kb)",
        "detail": "src.buttons.start",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "kind": 5,
        "importPath": "src.handlers.auth.router",
        "description": "src.handlers.auth.router",
        "peekOfCode": "auth_router = Router()",
        "detail": "src.handlers.auth.router",
        "documentation": {}
    },
    {
        "label": "main_router",
        "kind": 5,
        "importPath": "src.handlers.main.router",
        "description": "src.handlers.main.router",
        "peekOfCode": "main_router = Router()",
        "detail": "src.handlers.main.router",
        "documentation": {}
    },
    {
        "label": "recipes_router",
        "kind": 5,
        "importPath": "src.handlers.recipes.router",
        "description": "src.handlers.recipes.router",
        "peekOfCode": "recipes_router = Router()",
        "detail": "src.handlers.recipes.router",
        "documentation": {}
    },
    {
        "label": "pool",
        "kind": 5,
        "importPath": "src.integrations.redis",
        "description": "src.integrations.redis",
        "peekOfCode": "pool = ConnectionPool(\n    host=settings.REDIS_HOST,\n    port=settings.REDIS_PORT,\n    password=settings.REDIS_PASSWORD,\n    db=settings.REDIS_DB,\n)\nredis = Redis(\n    connection_pool=pool,\n)",
        "detail": "src.integrations.redis",
        "documentation": {}
    },
    {
        "label": "redis",
        "kind": 5,
        "importPath": "src.integrations.redis",
        "description": "src.integrations.redis",
        "peekOfCode": "redis = Redis(\n    connection_pool=pool,\n)",
        "detail": "src.integrations.redis",
        "documentation": {}
    },
    {
        "label": "get_dispatcher",
        "kind": 2,
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "peekOfCode": "def get_dispatcher() -> Dispatcher:\n    global dp\n    return dp\ndef get_tg_bot() -> Bot:\n    global bot\n    return bot",
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "get_tg_bot",
        "kind": 2,
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "peekOfCode": "def get_tg_bot() -> Bot:\n    global bot\n    return bot",
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "bot",
        "kind": 5,
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "peekOfCode": "bot = Bot(token=settings.BOT_TOKEN)\ndp = setup_dispatcher(bot)\ndef get_dispatcher() -> Dispatcher:\n    global dp\n    return dp\ndef get_tg_bot() -> Bot:\n    global bot\n    return bot",
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "dp",
        "kind": 5,
        "importPath": "src.integrations.tg_bot",
        "description": "src.integrations.tg_bot",
        "peekOfCode": "dp = setup_dispatcher(bot)\ndef get_dispatcher() -> Dispatcher:\n    global dp\n    return dp\ndef get_tg_bot() -> Bot:\n    global bot\n    return bot",
        "detail": "src.integrations.tg_bot",
        "documentation": {}
    },
    {
        "label": "LogServerMiddleware",
        "kind": 6,
        "importPath": "src.middleware.logger",
        "description": "src.middleware.logger",
        "peekOfCode": "class LogServerMiddleware:\n    def __init__(self, app: ASGIApp):\n        self.app = app\n    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if scope['type'] not in ('http', 'websocket'):\n            await self.app(scope, receive, send)\n            return\n        for header, value in scope['headers']:\n            if header == b'x-correlation-id':\n                correlation_id_ctx.set(value.decode())",
        "detail": "src.middleware.logger",
        "documentation": {}
    },
    {
        "label": "LogMessageMiddleware",
        "kind": 6,
        "importPath": "src.middleware.logger",
        "description": "src.middleware.logger",
        "peekOfCode": "class LogMessageMiddleware(BaseMiddleware):\n    async def __call__(\n        self,\n        handler: Callable[[TelegramObject, dict[str, Any]], Awaitable[Any]],\n        event: TelegramObject,\n        data: dict[str, Any],\n    ) -> Coroutine[Any, Any, Coroutine[Any, Any, Any]]:\n        try:\n            correlation_id_ctx.get()\n        except LookupError:",
        "detail": "src.middleware.logger",
        "documentation": {}
    },
    {
        "label": "setup_dispatcher",
        "kind": 2,
        "importPath": "src.on_startup.dispatcher",
        "description": "src.on_startup.dispatcher",
        "peekOfCode": "def setup_dispatcher(bot: Bot) -> Dispatcher:\n    storage = RedisStorage(redis)\n    dp = Dispatcher(storage=storage, bot=bot)\n    dp.include_routers(main_router)\n    dp.include_routers(auth_router)\n    dp.include_routers(recipes_router)\n    dp.message.middleware(LogMessageMiddleware())\n    dp.callback_query.middleware(LogMessageMiddleware())\n    return dp",
        "detail": "src.on_startup.dispatcher",
        "documentation": {}
    },
    {
        "label": "setup_logger",
        "kind": 2,
        "importPath": "src.on_startup.logger",
        "description": "src.on_startup.logger",
        "peekOfCode": "def setup_logger() -> None:\n    logging.config.dictConfig(LOGGING_CONFIG)\n    if settings.LOG_LEVEL == 'debug':\n        logger.setLevel(logging.DEBUG)",
        "detail": "src.on_startup.logger",
        "documentation": {}
    },
    {
        "label": "CreateState",
        "kind": 6,
        "importPath": "src.state.create",
        "description": "src.state.create",
        "peekOfCode": "class CreateState(StatesGroup):\n    type_recipe = State()\n    type_ingredients = State()",
        "detail": "src.state.create",
        "documentation": {}
    },
    {
        "label": "LoginState",
        "kind": 6,
        "importPath": "src.state.login",
        "description": "src.state.login",
        "peekOfCode": "class LoginState(StatesGroup):\n    unauthorized = State()\n    enter_code = State()\n    enter_name = State()\n    create_code = State()\n    authorized = State()",
        "detail": "src.state.login",
        "documentation": {}
    },
    {
        "label": "SearchState",
        "kind": 6,
        "importPath": "src.state.search",
        "description": "src.state.search",
        "peekOfCode": "class SearchState(StatesGroup):\n    type_ingredient = State()\n    popular_recipes = State()",
        "detail": "src.state.search",
        "documentation": {}
    },
    {
        "label": "render",
        "kind": 2,
        "importPath": "src.template.render",
        "description": "src.template.render",
        "peekOfCode": "def render(template_name: str, *args: P.args, **kwargs: P.kwargs) -> str:\n    template = env.get_template(template_name)\n    return template.render(*args, **kwargs)",
        "detail": "src.template.render",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "src.template.render",
        "description": "src.template.render",
        "peekOfCode": "env = Environment(loader=FileSystemLoader(searchpath='src/template/templates'), autoescape=select_autoescape())\nP = ParamSpec('P')\ndef render(template_name: str, *args: P.args, **kwargs: P.kwargs) -> str:\n    template = env.get_template(template_name)\n    return template.render(*args, **kwargs)",
        "detail": "src.template.render",
        "documentation": {}
    },
    {
        "label": "P",
        "kind": 5,
        "importPath": "src.template.render",
        "description": "src.template.render",
        "peekOfCode": "P = ParamSpec('P')\ndef render(template_name: str, *args: P.args, **kwargs: P.kwargs) -> str:\n    template = env.get_template(template_name)\n    return template.render(*args, **kwargs)",
        "detail": "src.template.render",
        "documentation": {}
    },
    {
        "label": "ClientSessionWithCorrId",
        "kind": 6,
        "importPath": "src.utils.request",
        "description": "src.utils.request",
        "peekOfCode": "class ClientSessionWithCorrId(aiohttp.ClientSession):\n    def _prepare_headers(self, headers: Optional[LooseHeaders]) -> CIMultiDict[str]:\n        headers = super()._prepare_headers(headers)\n        correlation_id = correlation_id_ctx.get()\n        headers['X-Correlation-Id'] = correlation_id\n        return headers\nasync def do_request(\n    url: str, params: Optional[Dict[str, Any]] = None, headers: Optional[Dict[str, Any]] = None\n) -> Any:\n    timeout = aiohttp.ClientTimeout(total=3)",
        "detail": "src.utils.request",
        "documentation": {}
    },
    {
        "label": "ConsoleFormatter",
        "kind": 6,
        "importPath": "src.logger",
        "description": "src.logger",
        "peekOfCode": "class ConsoleFormatter(logging.Formatter):\n    def format(self, record: logging.LogRecord) -> str:\n        try:\n            correlation_id = correlation_id_ctx.get()\n            return '[%s] %s' % (correlation_id, super().format(record))\n        except LookupError:\n            return super().format(record)\ncorrelation_id_ctx: ContextVar[str] = ContextVar('correlation_id_ctx')\nlogger = logging.getLogger('tinder_bot')",
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "src.logger",
        "description": "src.logger",
        "peekOfCode": "logger = logging.getLogger('tinder_bot')",
        "detail": "src.logger",
        "documentation": {}
    },
    {
        "label": "setup_middleware",
        "kind": 2,
        "importPath": "src.main",
        "description": "src.main",
        "peekOfCode": "def setup_middleware(app: FastAPI) -> None:\n    app.add_middleware(\n        LogServerMiddleware,\n    )\n    # CORS Middleware should be the last.\n    # See https://github.com/tiangolo/fastapi/issues/1663 .\n    app.add_middleware(\n        CORSMiddleware,\n        allow_origins=['*'],  # type: ignore\n        allow_credentials=True,  # type: ignore",
        "detail": "src.main",
        "documentation": {}
    },
    {
        "label": "setup_routers",
        "kind": 2,
        "importPath": "src.main",
        "description": "src.main",
        "peekOfCode": "def setup_routers(app: FastAPI) -> None:\n    app.include_router(tg_router)\n@asynccontextmanager\nasync def lifespan(app: FastAPI) -> AsyncIterator[None]:\n    print('START APP')\n    await setup_webhook(bot)\n    setup_logger()\n    yield\n    logging.info('Stopping')\n    while len(tg_background_tasks) > 0:",
        "detail": "src.main",
        "documentation": {}
    },
    {
        "label": "create_app",
        "kind": 2,
        "importPath": "src.main",
        "description": "src.main",
        "peekOfCode": "def create_app() -> FastAPI:\n    app = FastAPI(docs_url='/swagger', lifespan=lifespan)\n    setup_middleware(app)\n    setup_routers(app)\n    return app",
        "detail": "src.main",
        "documentation": {}
    }
]